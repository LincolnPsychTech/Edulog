function data = elrun(port, dur, varargin)
% Run specified Eduloggers for a specified duration at optimal resolution.
%
% "port" is the port Eduloggers are connected to, this is visible on the
% Neulog API window.
% "dur" is the duration (s) of the clap test, it must be at least 15s for
% any response to be visible.
% "loggers" is a one dimensional cell array, with each string specifying
% the name of a different Edulogger as described in the Neulog API
% literature:
% https://neulog.com/wp-content/uploads/2014/06/NeuLog-API-version-7.pdf
%
% The output "data" is a structure generated by running an Edulogger experiment,
% consisting of the following fields:
% Time: The time (s) since the start of the experiment of each sample.
% (double)
% Concern: Whether or not each sample took more than 0.4s  to retrieve (logical)
% An additional field for each kind of Edulogger used, containing the
% measurements taken at each point in data.Time. Fieldnames should line up
% with the names specified in "loggers".

load('eltypes.mat', 'eltypes'); % Load possible Edulogger types from file
loggers = varargin(contains(varargin, eltypes)); % Extract variable inputs matching valid types
if isempty(loggers) % If no valid loggers supplied...
    error('No valid Eduloggers selected'); % Throw up an error
end

%% Essential checks
if ~isnumeric(port) % If the port given is not a number...
    error('Port number (port) must be numeric') % Deliver an error
end
if ~isnumeric(dur) % If the given duration is not a number...
    error('Duration (dur) must be a numeric value') % Deliver an error
end


%% Run edulogger
tic % Start a timer
data = []; % Blank array to output data into
while toc < dur % Until the specified duration has elapsed
        val = elgetval(port, loggers); % Get value(s) from Edulogger(s)
        val.Time = toc; % Record the time taken
        try
            val.Concern = round(toc, 1) - data(end).Time > 0.4; % Did this timer stop at more than 0.4s after the last time?
        catch
            val.Concern = round(toc, 1) > 0.4; % If there is no last time, did it stop at more than 0.4s?
        end
    data = [data; val]; % Assign measurement to overall data structure
end
end