function data = elevents(data, varargin)
% Apply event data to GSR data, add either a logical array or timestamps as
% properly formatted events
%
% The input "data" is a structure generated by running an Edulogger experiment,
% consisting of the following fields:
% Time: The time (s) since the start of the experiment of each sample.
% (double)
% Concern: Whether or not each sample took more than twice the specified
% sample rate to retrieve (logical)
% An additional field for each kind of Edulogger used, containing the
% measurements taken at each point in data.Time.
% 
% varargin should be string/object pairs, with the name of the event
% followed by its data, e.g. elevents(data, 'Surprise', [10, 20, 30], 'relax', [5,
% 15, 25])

args = reshape(varargin, 2, []); % Reshape arguments into pairs
if ~all(... % Check that first input in each pair is either...
        cellfun(@ischar, args(1,:)) | ... % ...char...
        cellfun(@isstring, args(1,:)) ... % ...or string
        )
    error('Values beyond first input must be Name/Value pairs');
end

for a = args % For each argument pair...
    [data.(a{1})] = deal(false); % Set all values to false
    for n = 1:length(a{2}) % For each value in event matrix...
        switch class(a{2}) % Check the class of event matrix
            case 'logical' % If it is a logical array...
                if length(a{2}) == length(data) % Check that lengths match...
                    data(n).(a{1}) = a{2}(n); % Apply event matrix directly to data array
                else
                    error(['Could not apply event matrix ' a{1} '. Logical array must be same length as the data.']);
                end
            case 'double' % If it is a numeric array...
                [~, i] = min(abs([data.Time] - a{2}(n))); % Find the closest data point to the specified timestamp
                data(i).(a{1}) = true; % Mark event at this time
            otherwise
                error('Events must be either logical array of same length as data or numeric array of timestamps')
        end
    end
end